{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Calculator","props","state","width","height","quantity","flute_direction","handleChange","bind","calculateNumofSheets","calculateYield","calculateWaste","name","value","this","setState","sheet_size_width","sheet_size_height","total_yield","num_of_sheets","Math","ceil","console","log","width_rotate","height_rotate","total_yield_rotate","floor","sheet_area","order_area","round","eighteen_hundred_yield","nine_hundred_yield","twentyfour_hundred_yield","eighteen_hundred_waste","nine_hundred_waste","twentyfour_hundred_waste","eighteen_hundred_sheets","nine_hundred_sheets","twentyfour_hundred_sheets","background_color","class","Row","className","Col","xs","onSubmit","handleSubmit","type","onChange","e","target","sm","md","lg","style","backgroundColor","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.655783c0.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Calculator.css';\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 0,\n      height: 0,\n      quantity: 0,\n      flute_direction: 'Not Important',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.calculateNumofSheets = this.calculateNumofSheets\n    this.calculateYield = this.calculateYield.bind(this);\n    this.calculateWaste = this.calculateWaste.bind(this);\n  }\n\n  handleChange(name, value) {\n    switch (name) {\n      case 'width':\n        this.setState({width: value});\n        break;\n      case 'height':\n        this.setState({height: value});\n        break;\n      case 'quantity':\n        this.setState({quantity: value});\n        break;\n      case 'flute_direction':\n        this.setState({flute_direction: value});\n        break;\n      default:\n        break;\n    }\n  }\n\n  calculateNumofSheets(sheet_size_width, sheet_size_height) {\n    var quantity = this.state.quantity;\n    var total_yield = this.calculateYield(sheet_size_width, sheet_size_height);\n    \n    var num_of_sheets = 0;\n\n    if(quantity > 0 && total_yield != 0) {\n      num_of_sheets = Math.ceil(quantity/total_yield);\n    }\n\n    return num_of_sheets + \" sheet(s)\";\n\n  }\n\n  calculateYield(sheet_size_width, sheet_size_height) {\n    var width = this.state.width;\n    var height = this.state.height;\n    var flute_direction = this.state.flute_direction;\n\n    console.log(width);\n    console.log(height);\n    console.log(\"fl \" + flute_direction);\n\n    switch(flute_direction) {\n      case 'Not Important':\n        if(width && height > 0) {\n          var width_rotate = height;\n          var height_rotate = width;\n          var height_yield_swap = Math.floor(sheet_size_height/height_rotate);\n          var width_yield_swap = Math.floor(sheet_size_width/width_rotate);\n          var total_yield_rotate = height_yield_swap * width_yield_swap;\n\n          var height_yield = Math.floor(sheet_size_height/height);\n          var width_yield = Math.floor(sheet_size_width/width);\n          var total_yield = height_yield * width_yield;\n\n          if (total_yield_rotate > total_yield) {\n            return total_yield_rotate;\n          } else {\n            return total_yield;\n          }\n\n        }\n      case 'Horizontal':\n        if(width && height > 0) {\n          var width_rotate = height;\n          var height_rotate = width;\n          var height_yield = Math.floor(sheet_size_height/height_rotate);\n          var width_yield = Math.floor(sheet_size_width/width_rotate);\n          return height_yield * width_yield;\n        }\n        break;\n      case 'Vertical':\n        if(width && height > 0) {\n          var height_yield = Math.floor(sheet_size_height/height);\n          var width_yield = Math.floor(sheet_size_width/width);\n          return height_yield * width_yield;\n        }\n        break;\n      default:\n        break;\n    }\n    return 0;\n  }\n\n  calculateWaste(sheet_size_width, sheet_size_height) {\n    var width = this.state.width;\n    var height = this.state.height;\n\n    var sheet_area = sheet_size_width*sheet_size_height;\n\n    var total_yield = this.calculateYield(sheet_size_width, sheet_size_height);\n    \n    if(total_yield > 0) {\n      var order_area = width*height*total_yield;\n      var waste = Math.round(((sheet_area - order_area)/sheet_area)*100);\n      return waste + \"%\";\n    } else {\n      return \"N/A\";\n    }\n  }\n\n  // isLandscape() {\n  //   var width = this.state.width;\n  //   var height = this.state.height;\n  //   if (width > height) {\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // }\n\n\n\n\n  render() {\n    var width = this.state.width;\n    var height = this.state.height;\n    var flute_direction = this.state.flute_direction;\n    \n    //Total Yield\n    var eighteen_hundred_yield = this.calculateYield(1200, 1800);\n    var nine_hundred_yield = this.calculateYield(900, 2400);\n    var twentyfour_hundred_yield = this.calculateYield(1200, 2400);\n\n    //Total Waste\n    var eighteen_hundred_waste = this.calculateWaste(1200, 1800);\n    var nine_hundred_waste = this.calculateWaste(900, 2400);\n    var twentyfour_hundred_waste = this.calculateWaste(1200, 2400);\n\n    //Number of Sheets Used\n    var eighteen_hundred_sheets = this.calculateNumofSheets(1200, 1800);\n    var nine_hundred_sheets = this.calculateNumofSheets(900, 2400);\n    var twentyfour_hundred_sheets = this.calculateNumofSheets(1200, 2400);\n\n   var background_color = \"white\";\n    if(eighteen_hundred_waste === \"N/A\") {\n      background_color = \"red\";\n    }\n\n\n    return (\n      <div class=\"container-calculator\">\n        <Row className=\"artwork-form-row\">\n          <Col xs={12} className=\"artwork-col\">\n            <form onSubmit={this.handleSubmit}>\n              <h2>Artwork Info:</h2>  \n              <label>Width: </label> \n              <input type=\"number\" name=\"width\" value={this.state.width} onChange={e => this.handleChange(e.target.name, e.target.value)}/>\n              <br/>\n              <label>Height: </label>\n              <input type=\"number\" name=\"height\" value={this.state.height} onChange={e => this.handleChange(e.target.name, e.target.value)}/>\n              <br/>\n              <label>Quantity: </label>\n              <input type=\"number\" name=\"quantity\" value={this.state.quantity} onChange={e => this.handleChange(e.target.name, e.target.value)}/>\n              <br/>\n              <label>Flute Direction: </label>\n              <select value={this.state.flute_direction} name=\"flute_direction\" onChange={e => this.handleChange(e.target.name, e.target.value)}>\n                <option value=\"Not Important\">Not Important</option>\n                <option value=\"Horizontal\">Horizontal</option>\n                <option value=\"Vertical\">Vertical</option>\n              </select>\n            </form>\n          </Col>\n        </Row>\n\n        <Row className=\"sheet-info-row\">\n          <Col className=\"sheet-col\" xs={12} sm={12} md={4} lg={4}>\n            <h3>1830x1220</h3>\n            <p>Greatest Yield: {eighteen_hundred_yield} per sheet</p>\n            <p>Number of Sheets: {eighteen_hundred_sheets}</p>\n            <p>Waste: <span style={{backgroundColor: background_color}}>{eighteen_hundred_waste}</span></p>\n            <br/>\n          </Col>\n          <Col className=\"sheet-col\" xs={12} sm={12} md={4} lg={4}>\n            <h3>920x2420</h3>\n            <p>Greatest Yield: {nine_hundred_yield} per sheet</p>\n            <p>Number of Sheets: {nine_hundred_sheets}</p>\n            <p>Waste: {nine_hundred_waste}</p>\n            <br/>\n          </Col>\n          <Col className=\"sheet-col\" xs={12} sm={12} md={4} lg={4}>\n            <h3>1220x2420</h3>\n            <p>Greatest Yield: {twentyfour_hundred_yield} per sheet</p>\n            <p>Number of Sheets: {twentyfour_hundred_sheets}</p>\n            <p>Waste: {twentyfour_hundred_waste}</p>\n            <br/>\n          </Col>\n        </Row>\n      </div>\n\n      )\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}