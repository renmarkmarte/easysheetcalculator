{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Calculator","props","state","width","height","quantity","flute_direction","handleChange","bind","calculateNumofSheets","calculateYield","calculateWaste","getSheetClass","name","value","this","setState","sheet_size_width","sheet_size_height","total_yield","num_of_sheets","Math","ceil","width_rotate","height_rotate","total_yield_rotate","floor","artwork_area","sheet_area","greatest_yield","round","waste","result","eighteen_hundred_yield","nine_hundred_yield","twentyfour_hundred_yield","eighteen_hundred_waste","nine_hundred_waste","twentyfour_hundred_waste","eighteen_hundred_sheets","nine_hundred_sheets","twentyfour_hundred_sheets","eighteen_sheet_info_class","nine_sheet_info_class","twentyfour_sheet_info_class","class","Row","className","Col","xs","onSubmit","handleSubmit","type","onChange","e","target","sm","md","lg","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5047fcf.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './Calculator.css';\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 0,\n      height: 0,\n      quantity: 0,\n      flute_direction: 'Not Important',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.calculateNumofSheets = this.calculateNumofSheets\n    this.calculateYield = this.calculateYield.bind(this);\n    this.calculateWaste = this.calculateWaste.bind(this);\n    this.getSheetClass = this.getSheetClass.bind(this);\n  }\n\n  handleChange(name, value) {\n    switch (name) {\n      case 'width':\n        this.setState({width: value});\n        break;\n      case 'height':\n        this.setState({height: value});\n        break;\n      case 'quantity':\n        this.setState({quantity: value});\n        break;\n      case 'flute_direction':\n        this.setState({flute_direction: value});\n        break;\n      default:\n        break;\n    }\n  }\n\n  calculateNumofSheets(sheet_size_width, sheet_size_height) {\n    var quantity = this.state.quantity;\n    var total_yield = this.calculateYield(sheet_size_width, sheet_size_height);\n    \n    var num_of_sheets = 0;\n\n    if(quantity > 0 && total_yield != 0) {\n      num_of_sheets = Math.ceil(quantity/total_yield);\n    }\n\n    return num_of_sheets;\n\n  }\n\n  calculateYield(sheet_size_width, sheet_size_height) {\n    var width = this.state.width;\n    var height = this.state.height;\n    var flute_direction = this.state.flute_direction;\n\n    switch(flute_direction) {\n      case 'Not Important':\n        if(width && height > 0) {\n          var width_rotate = height;\n          var height_rotate = width;\n          var height_yield_swap = Math.floor(sheet_size_height/height_rotate);\n          var width_yield_swap = Math.floor(sheet_size_width/width_rotate);\n          var total_yield_rotate = height_yield_swap * width_yield_swap;\n\n          var height_yield = Math.floor(sheet_size_height/height);\n          var width_yield = Math.floor(sheet_size_width/width);\n          var total_yield = height_yield * width_yield;\n\n          if (total_yield_rotate > total_yield) {\n            return total_yield_rotate;\n          } else {\n            return total_yield;\n          }\n\n        }\n      case 'Horizontal':\n        if(width && height > 0) {\n          var width_rotate = height;\n          var height_rotate = width;\n          var height_yield = Math.floor(sheet_size_height/height_rotate);\n          var width_yield = Math.floor(sheet_size_width/width_rotate);\n          return height_yield * width_yield;\n        }\n        break;\n      case 'Vertical':\n        if(width && height > 0) {\n          var height_yield = Math.floor(sheet_size_height/height);\n          var width_yield = Math.floor(sheet_size_width/width);\n          return height_yield * width_yield;\n        }\n        break;\n      default:\n        break;\n    }\n    return 0;\n  }\n\n  calculateWaste(sheet_size_width, sheet_size_height) {\n    var artwork_area = this.state.width * this.state.height;\n    var quantity = this.state.quantity;\n\n    var sheet_area = sheet_size_width*sheet_size_height;\n\n    var greatest_yield = this.calculateYield(sheet_size_width, sheet_size_height);\n    var num_of_sheets = this.calculateNumofSheets(sheet_size_height, sheet_size_width);\n    \n    if(quantity > 0 && greatest_yield > 0) {\n      var area_used = Math.round((artwork_area*greatest_yield/sheet_area)*100);\n      var total_waste = 100-area_used;\n    \n//    if(quantity > 0 && greatest_yield > 0) {\n//      var full_sheet_area = artwork_area*greatest_yield;\n//      if(num_of_sheets > 1 && quantity%greatest_yield != 0) {\n//        var remainder_area = artwork_area*(quantity%greatest_yield);\n//        var modulo = quantity%greatest_yield;\n//        var total_area_used = Math.round(((full_sheet_area + remainder_area)/(sheet_area*2))*200);\n//        console.log(\"Fullsheetarea\"+full_sheet_area);\n//        console.log(\"Remainder\"+remainder_area);\n//        console.log(\"Sheet\"+sheet_area);\n//        console.log(\"quantity\"+quantity);\n//        console.log(\"greatest yield\"+greatest_yield);\n//        console.log(\"modulo\"+modulo);\n//        console.log(\"ARTWORK AREA\"+artwork_area);\n//        console.log(\"total\"+total_area_used);\n//        var total_waste = 200-total_area_used;\n//      } else {\n//        if(quantity%greatest_yield === 0) {\n//          var total_waste = 0;\n//        } else {\n//          var total_area_used = Math.round(((artwork_area*quantity)/sheet_area)*100);\n//        var total_waste = 100-total_area_used;\n//        }\n//        \n//      }\n//      \n//      \n//      //remainders exist and more than 1 sheet\n////      if(quantity%total_yield != 0 && num_of_sheets > 1) {\n////        var full_sheet_waste = Math.round(((sheet_area - full_sheet_area)/sheet_area)*100);\n////        var remainder_waste = Math.round(((sheet_area - remainder_area)/sheet_area)*100);\n////        var total_waste = (full_sheet_waste + remainder_waste)/200;\n////      } else {\n////        var total_waste = Math.round(((sheet_area - remainder_area)/sheet_area)*100);\n////      }\n      \n      return total_waste + \"%\";\n    } else {\n      return \"N/A\";\n    }\n  }\n  \n  getSheetClass(waste) {\n    var result = \"sheet-info-container\";\n    if(waste === \"N/A\") {\n      result = \"sheet-info-error\";\n    }\n    return result;\n  }\n\n  // isLandscape() {\n  //   var width = this.state.width;\n  //   var height = this.state.height;\n  //   if (width > height) {\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // }\n\n\n\n\n  render() {\n    var width = this.state.width;\n    var height = this.state.height;\n    var flute_direction = this.state.flute_direction;\n    \n    //Total Yield\n    var eighteen_hundred_yield = this.calculateYield(1200, 1800);\n    var nine_hundred_yield = this.calculateYield(900, 2400);\n    var twentyfour_hundred_yield = this.calculateYield(1200, 2400);\n\n    //Total Waste\n    var eighteen_hundred_waste = this.calculateWaste(1200, 1800);\n    var nine_hundred_waste = this.calculateWaste(900, 2400);\n    var twentyfour_hundred_waste = this.calculateWaste(1200, 2400);\n\n    //Number of Sheets Used\n    var eighteen_hundred_sheets = this.calculateNumofSheets(1200, 1800) + \" sheet(s)\";\n    var nine_hundred_sheets = this.calculateNumofSheets(900, 2400) + \" sheet(s)\";\n    var twentyfour_hundred_sheets = this.calculateNumofSheets(1200, 2400) + \" sheet(s)\";\n\n    var eighteen_sheet_info_class = this.getSheetClass(eighteen_hundred_waste);\n    var nine_sheet_info_class = this.getSheetClass(nine_hundred_waste);\n    var twentyfour_sheet_info_class = this.getSheetClass(twentyfour_hundred_waste);\n\n\n    return (\n      <div class=\"container-calculator\">\n        <div class=\"header-container\">\n          <Row className=\"header\">\n            <Col xs={12}>\n              <h1>EasySheet Calculator</h1>\n            </Col>\n          </Row>\n          <Row className=\"artwork-form-row text-center\">\n            <Col xs={12} className=\"artwork-form-col\">\n              <form class=\"form-inline justify-content-center align-items-center\" onSubmit={this.handleSubmit}> \n                <div class=\"form-group\">\n                  <label>Width: </label> \n                  <input type=\"number\" name=\"width\" value={this.state.width} onChange={e => this.handleChange(e.target.name, e.target.value)}/>\n                </div>\n                <div class=\"form-group\">\n                  <label>Height: </label>\n                  <input type=\"number\" name=\"height\" value={this.state.height} onChange={e => this.handleChange(e.target.name, e.target.value)}/>\n                </div>\n                <div class=\"form-group\">\n                  <label>Quantity: </label>\n                  <input type=\"number\" name=\"quantity\" value={this.state.quantity} onChange={e => this.handleChange(e.target.name, e.target.value)}/>\n                </div>\n                <div class=\"form-group\">\n                  <label>Flute Direction: </label>\n                  <select value={this.state.flute_direction} name=\"flute_direction\" onChange={e => this.handleChange(e.target.name, e.target.value)}>\n                    <option value=\"Not Important\">Not Important</option>\n                    <option value=\"Horizontal\">Horizontal</option>\n                    <option value=\"Vertical\">Vertical</option>\n                  </select>\n                </div>\n              </form>\n            </Col>\n          </Row>\n        </div>\n\n        <Row className=\"sheet-info-row\">\n          <Col className=\"sheet-col\" xs={12} sm={12} md={4} lg={4}>\n            <div class={eighteen_sheet_info_class}>\n              <h3>1830x1220</h3>\n              <p>Greatest Yield: {eighteen_hundred_yield} per sheet</p>\n              <p>Number of Sheets: {eighteen_hundred_sheets}</p>\n              <p>Waste: {eighteen_hundred_waste}</p>\n              \n            </div>\n          </Col>\n          <Col className=\"sheet-col\" xs={12} sm={12} md={4} lg={4}>\n            <div class={nine_sheet_info_class}>\n              <h3>920x2420</h3>\n              <p>Greatest Yield: {nine_hundred_yield} per sheet</p>\n              <p>Number of Sheets: {nine_hundred_sheets}</p>\n              <p>Waste: {nine_hundred_waste}</p>\n            </div>\n          </Col>\n          <Col className=\"sheet-col\" xs={12} sm={12} md={4} lg={4}>\n            <div class={twentyfour_sheet_info_class}>\n              <h3>1220x2420</h3>\n              <p>Greatest Yield: {twentyfour_hundred_yield} per sheet</p>\n              <p>Number of Sheets: {twentyfour_hundred_sheets}</p>\n              <p>Waste: {twentyfour_hundred_waste}</p>\n            </div>\n          </Col>\n        </Row>\n      </div>\n\n      )\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}